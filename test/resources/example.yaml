graphapi: 0.1.0
queries:
  todo:
    title: todo
    description: A Query with 1 required argument and 1 optional argument
    args:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/scalars/ID'
        isCompleted:
          $ref: '#/components/scalars/Boolean'
          description: A default value of false
          default: false
    $ref: '#/components/objects/Todo'
    nullable: true
  todos:
    title: todos
    description: Returns a list (or null) that can contain null values
    args:
      type: object
      required:
        - ids
      properties:
        ids:
          type: array
          items:
            $ref: '#/components/scalars/String'
          description: Required argument that is a list that cannot contain null values
    type: array
    items:
      $ref: '#/components/objects/Todo'
      nullable: true
    nullable: true
mutations:
  create_todo:
    title: create_todo
    description: A Mutation with 1 required argument
    args:
      type: object
      required:
        - todo
      properties:
        todo:
          $ref: '#/components/inputObjects/TodoInputType'
    $ref: '#/components/objects/Todo'
components:
  objects:
    Todo:
      title: Todo
      type: object
      required:
        - id
        - name
        - colors
      properties:
        id:
          title: id
          $ref: '#/components/scalars/ID'
        name:
          title: name
          $ref: '#/components/scalars/String'
        completed:
          title: completed
          $ref: '#/components/scalars/Boolean'
        color:
          title: color
          $ref: '#/components/enums/Color'
        colors:
          title: colors
          description: A field that requires an argument
          type: array
          items:
            $ref: '#/components/enums/Color'
          args:
            type: object
            required:
              - filter
            properties:
              filter:
                type: array
                items:
                  $ref: '#/components/enums/Color'
  scalars:
    ID:
      title: ID
      description: >-
        The `ID` scalar type represents a unique identifier, often used to
        refetch an object or as key for a cache. The ID type appears in a JSON
        response as a String; however, it is not intended to be human-readable.
        When expected as an input type, any string (such as `"4"`) or integer
        (such as `4`) input value will be accepted as an ID.
      type: string
    String:
      title: String
      description: >-
        The `String` scalar type represents textual data, represented as UTF-8
        character sequences. The String type is most often used by GraphQL to
        represent free-form human-readable text.
      type: string
    Boolean:
      title: Boolean
      description: The `Boolean` scalar type represents `true` or `false`.
      type: boolean
  enums:
    Color:
      title: Color
      type: string
      values:
        - value: RED
          description: Red color
        - value: GREEN
          description: Green color
  inputObjects:
    TodoInputType:
      title: TodoInputType
      type: object
      required:
        - name
      properties:
        name:
          title: name
          $ref: '#/components/scalars/String'
        completed:
          title: completed
          directives:
            deprecated:
              $ref: '#/components/directives/deprecated'
              meta:
                reason: not used
          $ref: '#/components/scalars/Boolean'
        color:
          title: color
          $ref: '#/components/enums/Color'
          default: RED
  directives:
    include:
      title: include
      description: >-
        Directs the executor to include this field or fragment only when the
        `if` argument is true.
      locations:
        - FIELD
        - FRAGMENT_SPREAD
        - INLINE_FRAGMENT
      args:
        type: object
        required:
          - if
        properties:
          if:
            $ref: '#/components/scalars/Boolean'
            description: Included when true.
      repeatable: false
    skip:
      title: skip
      description: >-
        Directs the executor to skip this field or fragment when the `if`
        argument is true.
      locations:
        - FIELD
        - FRAGMENT_SPREAD
        - INLINE_FRAGMENT
      args:
        type: object
        required:
          - if
        properties:
          if:
            $ref: '#/components/scalars/Boolean'
            description: Skipped when true.
      repeatable: false
    deprecated:
      title: deprecated
      description: Marks an element of a GraphQL schema as no longer supported.
      locations:
        - FIELD_DEFINITION
        - ARGUMENT_DEFINITION
        - INPUT_FIELD_DEFINITION
        - ENUM_VALUE
      args:
        type: object
        properties:
          reason:
            $ref: '#/components/scalars/String'
            description: >-
              Explains why this element was deprecated, usually also including a
              suggestion for how to access supported similar data. Formatted
              using the Markdown syntax, as specified by
              [CommonMark](https://commonmark.org/).
            default: No longer supported
      repeatable: false
    specifiedBy:
      title: specifiedBy
      description: Exposes a URL that specifies the behavior of this scalar.
      locations:
        - SCALAR
      args:
        type: object
        required:
          - url
        properties:
          url:
            $ref: '#/components/scalars/String'
            description: The URL that specifies the behavior of this scalar.
      repeatable: false
