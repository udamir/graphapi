{
  "__schema": {
    "queryType": {
      "name": "Query"
    },
    "mutationType": {
      "name": "Mutation"
    },
    "types": [
      {
        "kind": "OBJECT",
        "name": "Todo",
        "fields": [
          {
            "name": "id",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "ID"
              }
            },
            "isDeprecated": false
          },
          {
            "name": "name",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "isDeprecated": false
          },
          {
            "name": "completed",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean"
            },
            "isDeprecated": false
          },
          {
            "name": "color",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "Color"
            },
            "isDeprecated": false
          },
          {
            "name": "colors",
            "description": "A field that requires an argument",
            "args": [
              {
                "name": "filter",
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "LIST",
                    "ofType": {
                      "kind": "NON_NULL",
                      "ofType": {
                        "kind": "ENUM",
                        "name": "Color"
                      }
                    }
                  }
                },
                "isDeprecated": false
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "ENUM",
                    "name": "Color"
                  }
                }
              }
            },
            "isDeprecated": false
          }
        ],
        "interfaces": []
      },
      {
        "kind": "SCALAR",
        "name": "ID",
        "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."
      },
      {
        "kind": "SCALAR",
        "name": "String",
        "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."
      },
      {
        "kind": "SCALAR",
        "name": "Boolean",
        "description": "The `Boolean` scalar type represents `true` or `false`."
      },
      {
        "kind": "ENUM",
        "name": "Color",
        "enumValues": [
          {
            "name": "RED",
            "description": "Red color",
            "isDeprecated": false
          },
          {
            "name": "GREEN",
            "description": "Green color",
            "isDeprecated": false
          }
        ]
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TodoInputType",
        "inputFields": [
          {
            "name": "name",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "isDeprecated": false
          },
          {
            "name": "completed",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean"
            },
            "isDeprecated": true,
            "deprecationReason": "not used"
          },
          {
            "name": "color",
            "type": {
              "kind": "ENUM",
              "name": "Color"
            },
            "defaultValue": "RED",
            "isDeprecated": false
          }
        ]
      },
      {
        "kind": "OBJECT",
        "name": "Query",
        "fields": [
          {
            "name": "todo",
            "description": "A Query with 1 required argument and 1 optional argument",
            "args": [
              {
                "name": "id",
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID"
                  }
                },
                "isDeprecated": false
              },
              {
                "name": "isCompleted",
                "description": "A default value of false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "defaultValue": false,
                "isDeprecated": false
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Todo"
            },
            "isDeprecated": false
          },
          {
            "name": "todos",
            "description": "Returns a list (or null) that can contain null values",
            "args": [
              {
                "name": "ids",
                "description": "Required argument that is a list that cannot contain null values",
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "LIST",
                    "ofType": {
                      "kind": "NON_NULL",
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String"
                      }
                    }
                  }
                },
                "isDeprecated": false
              }
            ],
            "type": {
              "kind": "LIST",
              "ofType": {
                "kind": "OBJECT",
                "name": "Todo"
              }
            },
            "isDeprecated": false
          }
        ],
        "interfaces": []
      },
      {
        "kind": "OBJECT",
        "name": "Mutation",
        "fields": [
          {
            "name": "create_todo",
            "description": "A Mutation with 1 required argument",
            "args": [
              {
                "name": "todo",
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "TodoInputType"
                  }
                },
                "isDeprecated": false
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Todo"
              }
            },
            "isDeprecated": false
          }
        ],
        "interfaces": []
      }
    ],
    "directives": [
      {
        "name": "include",
        "description": "Directs the executor to include this field or fragment only when the `if` argument is true.",
        "isRepeatable": false,
        "locations": [
          "FIELD",
          "FRAGMENT_SPREAD",
          "INLINE_FRAGMENT"
        ],
        "args": [
          {
            "name": "if",
            "description": "Included when true.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean"
              }
            },
            "isDeprecated": false
          }
        ]
      },
      {
        "name": "skip",
        "description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
        "isRepeatable": false,
        "locations": [
          "FIELD",
          "FRAGMENT_SPREAD",
          "INLINE_FRAGMENT"
        ],
        "args": [
          {
            "name": "if",
            "description": "Skipped when true.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean"
              }
            },
            "isDeprecated": false
          }
        ]
      },
      {
        "name": "deprecated",
        "description": "Marks an element of a GraphQL schema as no longer supported.",
        "isRepeatable": false,
        "locations": [
          "FIELD_DEFINITION",
          "ARGUMENT_DEFINITION",
          "INPUT_FIELD_DEFINITION",
          "ENUM_VALUE"
        ],
        "args": [
          {
            "name": "reason",
            "description": "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",
            "type": {
              "kind": "SCALAR",
              "name": "String"
            },
            "defaultValue": "No longer supported",
            "isDeprecated": false
          }
        ]
      },
      {
        "name": "specifiedBy",
        "description": "Exposes a URL that specifies the behavior of this scalar.",
        "isRepeatable": false,
        "locations": [
          "SCALAR"
        ],
        "args": [
          {
            "name": "url",
            "description": "The URL that specifies the behavior of this scalar.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "isDeprecated": false
          }
        ]
      }
    ]
  }
}